/* Write your global styles here, in SCSS syntax. Variables and mixins from the src/variables.scss file are available here without importing */
@use 'sass:meta';

@layer pico {
	@include meta.load-css('pico');
}

:root {
	--spacing-small: calc(var(--spacing) / 2);
}

h1,
h2,
h3,
h4,
h5,
h6 {
	--typography-spacing-vertical: 1.5rem;
}

fieldset {
	display: flex;
	flex-wrap: wrap;
	gap: var(--spacing);
}

button.inline {
	display: inline;
	width: auto;
}

input:not([type='checkbox'], [type='radio']),
select,
textarea {
	width: auto;
}

input[type='color'] {
	padding: 0;
	aspect-ratio: 1 / 1;
}

label {
	position: relative;
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	gap: var(--spacing-small);
}

label > span {
	-webkit-user-select: none;
	user-select: none;
}

label > input {
	margin: var(--spacing) 0;
}

label > :is(input:not([type]), input[type='text']) {
	max-width: 100cqw;

	+ .field-title {
		position: absolute;
		top: var(--spacing);
		left: var(--form-element-spacing-horizontal);
		display: flex;
		padding: 0 var(--spacing-small);
		border-radius: var(--border-radius);
		background: var(--background-color);
		cursor: text;
		transform: translateY(-50%);
		gap: var(--spacing-small);
	}
}

@container (max-width: 300px) {
	fieldset {
		--spacing: 0.5rem;
	}

	fieldset legend {
		margin-bottom: var(--spacing);
	}

	label > input:not([type='checkbox'], [type='radio'], [type='range']) {
		height: calc(
			0.5rem * var(--line-height) + var(--form-element-spacing-vertical) * 2 + var(--border-width) *
				2
		);
	}
}
